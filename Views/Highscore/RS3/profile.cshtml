@using rstracker.Enums;
@model rstracker.Models.Player;

@{

    ViewData["Title"] = Model.Username;

    long lastUpdateInSeconds = (@Model.LastUpdate - DateTimeOffset.UtcNow.ToUnixTimeMilliseconds()) / 1000;

    long totalXpDifference = Model.GetDailyXP(Skill.TOTAL);
    long xpDifference = 0;

}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="~/css/profile.css" />
</head>
<body>
    <div class="center">
        <div class="container">
            <div class="avatar__header">
                <div class="avatar__header__information">
                    <div class="avatar__picture">
                        <img src="https://secure.runescape.com/m=avatar-rs/{@Model.Username}/chat.png" />
                    </div>
                    <div class="avatar__username">
                        @if (!string.IsNullOrEmpty(Model.GetGameMode()))
                        {
                            <img class="avatar__gamemode" src="~/img/gamemode/@Model.GetGameMode()" />
                        }
                        @Model.Username <span class="avatar__clan__name">@(Model.ClanMember.Clan != null ? $"(member of {Model.ClanMember.Clan})" : "")</span></div>
                    <div class="avatar__rank">Rank @Model.GetRank()</div>
                </div>
                <div class="avatar__summary_stats">
                    <div class="avatar__last__update__header">
                        Next update in @lastUpdateInSeconds seconds
                    </div>
                    <div class="avatar__summary__header">
                        summary
                    </div>
                    <div>
                        <dl class="mt-3 grid grid-cols-1 divide-y divide-gray-200 overflow-hidden rounded-lg bg-[#071F2A] shadow md:grid-cols-3 md:divide-x md:divide-y-0">
                            <div class="px-4 py-5 sm:p-6">
                                <dt class="text-base font-normal text-[#e1bb34]">Total XP</dt>
                                <dd class="mt-1 flex items-baseline justify-between md:block lg:flex">
                                    <div class="flex items-baseline text-2xl font-semibold text-white">
                                        @Model.GetSkillExperience(Model.SkillData, Skill.TOTAL).ToString("N0")
                                    </div>

                                    @if (totalXpDifference > 0)
                                    {
                                        <div class="inline-flex items-baseline rounded-full px-2.5 py-0.5 text-sm font-medium bg-green-100 text-green-800 md:mt-2 lg:mt-0">
                                            <svg class="-ml-1 mr-0.5 h-5 w-5 flex-shrink-0 self-center text-green-500" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                <path fill-rule="evenodd" d="M10 17a.75.75 0 01-.75-.75V5.612L5.29 9.77a.75.75 0 01-1.08-1.04l5.25-5.5a.75.75 0 011.08 0l5.25 5.5a.75.75 0 11-1.08 1.04l-3.96-4.158V16.25A.75.75 0 0110 17z" clip-rule="evenodd" />
                                            </svg>

                                            <span class="font-extrabold sr-only"> Increased by </span>
                                            <span class="font-extrabold">@totalXpDifference.ToString("N0") XP</span>

                                        </div>
                                    }
                                </dd>
                            </div>

                            <div class="px-4 py-5 sm:p-6">
                                <dt class="text-base font-normal text-[#e1bb34]">Total Level</dt>
                                <dd class="mt-1 flex items-baseline justify-between md:block lg:flex">
                                    <div class="flex items-baseline text-2xl font-semibold text-white">
                                        @Model.GetSkillLevel(Skill.TOTAL)
                                    </div>

                                    <div class="inline-flex items-baseline rounded-full px-2.5 py-0.5 text-sm font-medium bg-green-100 text-green-800 md:mt-2 lg:mt-0">
                                        <svg class="-ml-1 mr-0.5 h-5 w-5 flex-shrink-0 self-center text-green-500" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                            <path fill-rule="evenodd" d="M10 17a.75.75 0 01-.75-.75V5.612L5.29 9.77a.75.75 0 01-1.08-1.04l5.25-5.5a.75.75 0 011.08 0l5.25 5.5a.75.75 0 11-1.08 1.04l-3.96-4.158V16.25A.75.75 0 0110 17z" clip-rule="evenodd" />
                                        </svg>
                                        <span class="sr-only"> Increased by </span>
                                        2.02%
                                    </div>
                                </dd>
                            </div>

                            <div class="px-4 py-5 sm:p-6">
                                <dt class="text-base font-normal text-[#e1bb34]">Combat Level</dt>
                                <dd class="mt-1 flex items-baseline justify-between md:block lg:flex">
                                    <div class="flex items-baseline text-2xl font-semibold text-white">
                                        @Model.GetCombatLevel()
                                    </div>

                                    <div class="inline-flex items-baseline rounded-full px-2.5 py-0.5 text-sm font-medium bg-red-100 text-red-800 md:mt-2 lg:mt-0">
                                        <svg class="-ml-1 mr-0.5 h-5 w-5 flex-shrink-0 self-center text-red-500" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                            <path fill-rule="evenodd" d="M10 3a.75.75 0 01.75.75v10.638l3.96-4.158a.75.75 0 111.08 1.04l-5.25 5.5a.75.75 0 01-1.08 0l-5.25-5.5a.75.75 0 111.08-1.04l3.96 4.158V3.75A.75.75 0 0110 3z" clip-rule="evenodd" />
                                        </svg>
                                        <span class="sr-only"> Decreased by </span>
                                        4.05%
                                    </div>
                                </dd>
                            </div>
                        </dl>
                    </div>
                </div>
                <div class="avatar__stats__table">
                    <div class="avatar__summary__header">
                        stats
                    </div>
                    <div class="mt-4 bg-[#071F2A] py-15">
                        <table class="mt-6 w-full whitespace-nowrap text-left">
                            <colgroup>
                                <col class="w-full sm:w-4/12">
                                <col class="lg:w-4/12">
                                <col class="lg:w-2/12">
                                <col class="lg:w-1/12">
                                <col class="lg:w-1/12">
                            </colgroup>
                            <thead class="border-b border-white/10 text-sm leading-6 text-white">
                                <tr>
                                    <th scope="col" class="text-[#e1bb34] py-2 pl-4 pr-8 font-semibold sm:pl-6 lg:pl-8">Skill</th>
                                    <th scope="col" class="text-[#e1bb34] hidden py-2 pl-0 pr-8 font-semibold sm:table-cell">Total XP</th>
                                    <th scope="col" class="text-[#e1bb34] py-2 pl-0 pr-4 text-right font-semibold sm:pr-8 sm:text-left lg:pr-20">Level</th>
                                    <th scope="col" class="text-[#e1bb34] hidden py-2 pl-0 pr-8 font-semibold md:table-cell lg:pr-20">XP Left</th>
                                    <th scope="col" class="text-[#e1bb34] hidden py-2 pl-0 pr-4 text-right font-semibold sm:table-cell sm:pr-6 lg:pr-8">XP Gained</th>
                                </tr>
                            </thead>
                            <tbody class="divide-y divide-white/5">
                                @foreach (var skills in Enum.GetValues(typeof(Skill)))
                                {
                                    if ((Skill)skills == Skill.TOTAL)
                                        continue;
                                    xpDifference = Model.GetDailyXP((Skill)skills);
                                    <tr>
                                        <td class="py-4 pl-4 pr-8 sm:pl-6 lg:pl-8">
                                            <div class="flex items-center gap-x-4">
                                                <img src="~/img/skill_icons/@(skills).png" alt="" class="h-8 w-8">
                                                <div class="truncate text-sm font-medium leading-6 text-white">@skills</div>
                                            </div>
                                        </td>
                                        <td class="hidden py-4 pl-0 pr-4 sm:table-cell sm:pr-8">
                                            <div class="flex gap-x-3">
                                                <div class="font-mono text-sm leading-6 text-white">@Model.GetSkillExperience(Model.SkillData, (Skill) skills).ToString("N0")</div>
                                            </div>
                                        </td>
                                        <td class="py-4 pl-0 pr-4 text-sm leading-6 sm:pr-8 lg:pr-20">
                                            <div class="flex items-center justify-end gap-x-2 sm:justify-start">
                                                <div class="hidden text-white sm:block">@Model.GetSkillLevel((Skill) skills)</div>
                                            </div>
                                        </td>
                                        <td class="hidden py-4 pl-0 pr-8 text-sm leading-6 text-white md:table-cell lg:pr-20">0</td>
                                        <td class="hidden py-4 pl-0 pr-4 text-right text-sm leading-6 text-gray-400 sm:table-cell sm:pr-6 lg:pr-8">
                                            <div class="hidden @(xpDifference > 0 ? "text-green-500" : "text-white") sm:block">@xpDifference.ToString("N0")</div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @if (Model.SearchCount == 1 && lastUpdateInSeconds > 55)
    {
        <div class="notification fade-out">
            <div aria-live="assertive" class="pointer-events-none fixed inset-0 flex items-end px-4 py-6 sm:items-start sm:p-6">
                <div class="flex w-full flex-col items-center space-y-4 sm:items-end">
                    <div class="pointer-events-auto w-full max-w-sm overflow-hidden rounded-lg bg-white shadow-lg ring-1 ring-black ring-opacity-5">
                        <div class="p-4">
                            <div class="flex items-start">
                                <div class="flex-shrink-0">
                                    <svg class="h-6 w-6 text-green-400" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                    </svg>
                                </div>
                                <div class="ml-3 w-0 flex-1 pt-0.5">
                                    <p class="text-sm font-medium text-gray-900">@Model.Username is now being tracked!</p>
                                    <p class="mt-1 text-sm text-gray-500">This player will now be tracked and is updated every 60 seconds.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <script>
        window.onload = function () {
            setTimeout(function () {
                var notification = document.querySelector('.notification');
                notification.classList.add('hide');
            }, 3000);
        };
    </script>
</body>
</html>
